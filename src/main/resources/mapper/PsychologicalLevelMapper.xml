<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chards.committee.mapper.PsychologicalLevelMapper">

    <resultMap type="com.chards.committee.domain.PsychologicalLevel" id="BaseResultMap">
        <result property="id" column="id" jdbcType="BIGINT"/>
        <result property="stuNum" column="stu_num" jdbcType="VARCHAR"/>
        <result property="learningProblem" column="learning_problem" jdbcType="VARCHAR"/>
        <result property="economicProblem" column="economic_problem" jdbcType="VARCHAR"/>
        <result property="abnormalBehaviorProblem" column="abnormal_behavior_problem" jdbcType="VARCHAR"/>
        <result property="lifeEventProblem" column="life_event_problem" jdbcType="VARCHAR"/>
        <result property="personalityProblem" column="personality_problem" jdbcType="VARCHAR"/>
        <result property="epidemicPsychologicalProblem" column="epidemic_psychological_problem" jdbcType="VARCHAR"/>
        <result property="level" column="level" jdbcType="VARCHAR"/>
        <result property="initLevel" column="init_level" jdbcType="VARCHAR"/>
        <result property="initTime" column="init_time" jdbcType="TIMESTAMP"/>
        <result property="basis" column="basis" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="recorder" column="recorder" jdbcType="VARCHAR"/>
        <result property="recordedTime" column="recorded_time" jdbcType="TIMESTAMP"/>
        <result property="checkStatus" column="check_status" jdbcType="INTEGER"/>
        <result property="reviewer" column="reviewer" jdbcType="VARCHAR"/>
        <result property="instruction" column="instruction" jdbcType="VARCHAR"/>
        <result property="checkTime" column="check_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="dateArea">
        and unix_timestamp(psychological_level.recorded_time)  <![CDATA[ >= ]]> unix_timestamp(#{param.startTime,jdbcType=VARCHAR})
        and unix_timestamp(psychological_level.recorded_time)  <![CDATA[ <= ]]> unix_timestamp(#{param.endTime,jdbcType=VARCHAR})

    </sql>

    <update id="checkStatus">
        update psychological_level
        set check_status = #{checkStatus}, reviewer = #{reviewer},
            instruction = #{instruction}, check_time = #{checkTime}
        where id = #{id}
    </update>

    <update id="updatePsyLevelById" parameterType="com.chards.committee.vo.PsychologicalLevelUpdateVO">
        update psychological_level
        <set>
            check_status=0,
            <if test="psychologicalLevelUpdateVO.learningProblem != null">
                learning_problem = #{psychologicalLevelUpdateVO.learningProblem},
            </if>
            <if test="psychologicalLevelUpdateVO.economicProblem != null">
                economic_problem = #{psychologicalLevelUpdateVO.economicProblem},
            </if>
            <if test="psychologicalLevelUpdateVO.abnormalBehaviorProblem != null">
                abnormal_behavior_problem = #{psychologicalLevelUpdateVO.abnormalBehaviorProblem},
            </if>
            <if test="psychologicalLevelUpdateVO.lifeEventProblem != null">
                life_event_problem = #{psychologicalLevelUpdateVO.lifeEventProblem},
            </if>
            <if test="psychologicalLevelUpdateVO.personalityProblem != null">
                personality_problem = #{psychologicalLevelUpdateVO.personalityProblem},
            </if>
            <if test="psychologicalLevelUpdateVO.epidemicPsychologicalProblem != null">
                epidemic_psychological_problem = #{psychologicalLevelUpdateVO.epidemicPsychologicalProblem},
            </if>
            <if test="psychologicalLevelUpdateVO.level != null">
                level = #{psychologicalLevelUpdateVO.level},
            </if>
            <if test="psychologicalLevelUpdateVO.basis != null">
                basis = #{psychologicalLevelUpdateVO.basis},
            </if>
            <if test="psychologicalLevelUpdateVO.remark != null">
                remark = #{psychologicalLevelUpdateVO.remark},
            </if>
            <if test="psychologicalLevelUpdateVO.recordedTime != null">
                recorded_time = #{psychologicalLevelUpdateVO.recordedTime}
            </if>
        </set>
        where id = #{psychologicalLevelUpdateVO.id}
    </update>

<!--没加更新权限控制前的版本-->
    <select id="getPsychologicalLevelPage_original" resultType="com.chards.committee.vo.PsychologicalLevelCheckSelectVO">
        select * from psychological_level
        <where>
            <if test = "recorder != ''">
                recorder = #{recorder}
            </if>
            <if test = "stuNum != ''">
                And stu_num = #{stuNum}
            </if>
            <if test="checkStatus != null">
                And check_status = #{checkStatus}
            </if>
        </where>
        order by
        recorded_time desc
    </select>

    <sql id="psychologicalLevelPage">
        select p.*, s.department, s.education_background,s.classes, s.major, s.grade, s.state  from psychological_level as p
        inner join stu_info as s on s.id = p.stu_num
        <where>
            <if test = "param.stuNum != ''">
                And p.stu_num = #{param.stuNum}
            </if>
            <if test="param.checkStatus != null">
                And p.check_status = #{param.checkStatus}
            </if>
        </where>

    </sql>
    <select id="getPsychologicalLevelPage" resultType="com.chards.committee.vo.PsychologicalLevelCheckSelectVO">
        <include refid="psychologicalLevelPage"></include>
        order by
        recorded_time desc
    </select>

    <select id="getPsychologicalLevelByStuNum" resultMap="BaseResultMap">
        select *
        from psychological_level
        where stu_num = #{stuNum}
        order by recorded_time desc
    </select>



<!--此处为之前没有管理员权限控制的版本-->
    <select id="getPsychologicalLevelByParams_original" resultType="com.chards.committee.vo.PsychologicalLevelGetByStuNumVO">
        select p1.*,
        s.name,
        s.gender,
        s.classes ,
        s.department
        from psychological_level as p1
        inner join stu_info as s on p1.stu_num = s.id
        inner join (SELECT *,max(recorded_time) as max_time
        FROM psychological_level WHERE check_status=1 group by stu_num) p2 on p1.recorded_time = p2.max_time and p1.stu_num=p2.stu_num
        <where>
            <if test="psychologicalLQNPVO.stuNum != null">
                And s.id = #{psychologicalLQNPVO.stuNum}
            </if>
            <if test="psychologicalLQNPVO.department != null">
                And s.department = #{psychologicalLQNPVO.department}
            </if>
            <if test="psychologicalLQNPVO.grade != null">
                And s.grade = #{psychologicalLQNPVO.grade}
            </if>
            <if test="psychologicalLQNPVO.learningProblem != null">
                And p1.learning_problem != "" And p1.learning_problem is not null
            </if>
            <if test="psychologicalLQNPVO.economicProblem != null">
                And p1.economic_problem != "" And p1.economic_problem is not null
            </if>
            <if test="psychologicalLQNPVO.abnormalBehaviorProblem != null">
                And p1.abnormal_behavior_problem != "" And p1.abnormal_behavior_problem is not null
            </if>
            <if test="psychologicalLQNPVO.lifeEventProblem != null">
                And p1.life_event_problem != "" And p1.life_event_problem is not null
            </if>
            <if test="psychologicalLQNPVO.personalityProblem != null">
                And p1.personality_problem != "" And p1.personality_problem is not null
            </if>
            <if test="psychologicalLQNPVO.epidemicPsychologicalProblem != null">
                And p1.epidemic_psychological_problem != "" And p1.epidemic_psychological_problem is not null
            </if>
            <if test="psychologicalLQNPVO.clues != null">
                And
                <foreach item="item" collection="psychologicalLQNPVO.clues" open="(" close=")" separator="Or" index="index">
                    (p1.learning_problem REGEXP #{item}
                    Or p1.economic_problem REGEXP #{item}
                    Or p1.abnormal_behavior_problem REGEXP #{item}
                    Or p1.life_event_problem REGEXP #{item}
                    Or p1.personality_problem REGEXP #{item}
                    Or p1.epidemic_psychological_problem REGEXP #{item})
                </foreach>
            </if>
            <if test="psychologicalLQNPVO.level != null">
                And p1.level = #{psychologicalLQNPVO.level}
            </if>
        </where>
    </select>

    <sql id="psychologicalLevelByParams">
        select p1.*,
        s.name,
        s.gender,
        s.classes ,
        s.major,
        s.department,
        s.state,
        s.grade,
        s.education_background
        from psychological_level as p1
        inner join stu_info as s on p1.stu_num = s.id
        inner join (SELECT *,max(recorded_time) as max_time
        FROM psychological_level WHERE check_status=1 group by psychological_level.stu_num) p2 on p1.recorded_time = p2.max_time and p1.stu_num=p2.stu_num
        <where>
            <if test="psychologicalLGD.stuNum != null">
                And s.id = #{psychologicalLGD.stuNum}
            </if>
            <if test="psychologicalLGD.department != null">
                And s.department = #{psychologicalLGD.department}
            </if>
            <if test="psychologicalLGD.grade != null">
                And s.grade = #{psychologicalLGD.grade}
            </if>
            <if test="psychologicalLGD.learningProblem != null">
                And p1.learning_problem != "" And p1.learning_problem is not null
            </if>
            <if test="psychologicalLGD.economicProblem != null">
                And p1.economic_problem != "" And p1.economic_problem is not null
            </if>
            <if test="psychologicalLGD.abnormalBehaviorProblem != null">
                And p1.abnormal_behavior_problem != "" And p1.abnormal_behavior_problem is not null
            </if>
            <if test="psychologicalLGD.lifeEventProblem != null">
                And p1.life_event_problem != "" And p1.life_event_problem is not null
            </if>
            <if test="psychologicalLGD.personalityProblem != null">
                And p1.personality_problem != "" And p1.personality_problem is not null
            </if>
            <if test="psychologicalLGD.epidemicPsychologicalProblem != null">
                And p1.epidemic_psychological_problem != "" And p1.epidemic_psychological_problem is not null
            </if>
            <if test="psychologicalLGD.clues != null">
                And
                <foreach item="clue" collection="psychologicalLGD.clues" open="(" close=")" separator="Or" index="clue_index">
                    (p1.learning_problem REGEXP #{clue}
                    Or p1.economic_problem REGEXP #{clue}
                    Or p1.abnormal_behavior_problem REGEXP #{clue}
                    Or p1.life_event_problem REGEXP #{clue}
                    Or p1.personality_problem REGEXP #{clue}
                    Or p1.epidemic_psychological_problem REGEXP #{clue})
                </foreach>
            </if>
            <if test="psychologicalLGD.level != null">
                And p1.level = #{psychologicalLGD.level}
            </if>
        </where>
    </sql>


    <select id="getPsychologicalLevelByParams" resultType="com.chards.committee.vo.PsychologicalLevelGetByStuNumVO">
        <include refid="psychologicalLevelByParams"></include>

    </select>
    <select id="getPsychologicalLevelByParams1" resultType="com.chards.committee.vo.PsychologicalLevelGetByStuNumVO1">
        <include refid="psychologicalLevelByParams"></include>
    </select>
</mapper>